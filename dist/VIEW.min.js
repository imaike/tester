!function(I){function g(A){if(C[A])return C[A].exports;var i=C[A]={i:A,l:!1,exports:{}};return I[A].call(i.exports,i,i.exports,g),i.l=!0,i.exports}var C={};g.m=I,g.c=C,g.i=function(I){return I},g.d=function(I,C,A){g.o(I,C)||Object.defineProperty(I,C,{configurable:!1,enumerable:!0,get:A})},g.n=function(I){var C=I&&I.__esModule?function(){return I.default}:function(){return I};return g.d(C,"a",C),C},g.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},g.p="",g(g.s=16)}({16:function(module,exports){eval('//Ken-Q Analysis\n//Copyright (C) 2016 Shawn Banasick\n//\n//    This program is free software: you can redistribute it and/or modify\n//    it under the terms of the GNU General Public License as published by\n//    the Free Software Foundation, either version 3 of the License, or\n//    (at your option) any later version.\n\n\n// JSlint declarations\n/* global window, LOAD, $, localStorage, QAV, d3, resources, document*/\n\n\n(function (VIEW, QAV, undefined) {\n\n\n    // ************************************************************  view\n    // ******* SECTION 1 - intro   ******+++++++++++++++*****************\n    // ******************************************************************\n\n    $(function () {\n        // Single Page navigation\n        $(\'.single-page-nav\').singlePageNav({\n            offset: $(\'.single-page-nav\').outerHeight(),\n            filter: \':not(.external)\',\n            updateHash: true,\n            beforeStart: function () {},\n            onComplete: function () {}\n        });\n    });\n\n    // auto scroll to top of page on reload\n    $(function () {\n        $("#heroSection")[0].click();\n    });\n\n\n    (function () {\n        var language = QAV.getState("language");\n        var YouSeemToBeUsing = resources[language].translation["You seem to be using"];\n        var readyForAnalysis = resources[language].translation["Ready to begin analysis"];\n        var YouShouldUpdate = resources[language].translation["Please update your browser before using Ken-Q Analysis"];\n        var YouShouldSwitch = resources[language].translation["This browser is not supported by Ken-Q Analysis <br> Please use one of the browsers listed above"];\n\n        var message, Linux;\n        var versionLong = platform.version;\n        var version = versionLong.slice(0, 2);\n        var opSystem = platform.os.family;\n        var userAgent = platform.ua;\n        var browser = platform.name;\n\n        if (userAgent.indexOf(\'Linux\') >= 0) {\n            Linux = true;\n        }\n\n\n        if (opSystem === "OS X") {\n            if (browser === "Firefox") {\n                if (+version >= 51) {\n                    message = goodToGo();\n                } else {\n                    message = updateYourBrowser();\n                }\n            } else if (browser === "Chrome") {\n                if (+version >= 55) {\n                    message = goodToGo();\n                } else {\n                    message = updateYourBrowser();\n                }\n            } else {\n                message = changeYourBrowser();\n            }\n        } else if (opSystem === "Windows") {\n            if (browser === "Firefox") {\n                if (+version >= 51) {\n                    message = goodToGo();\n                } else {\n                    message = updateYourBrowser();\n                }\n            } else if (browser === "Chrome") {\n                if (+version >= 55) {\n                    message = goodToGo();\n                } else {\n                    message = updateYourBrowser();\n                }\n            } else if (browser === "Microsoft Edge") {\n                if (+version >= 14) {\n                    message = goodToGo();\n                } else {\n                    message = updateYourBrowser();\n                }\n            } else {\n                message = changeYourBrowser();\n            }\n        } else if (Linux) {\n            if (browser === "Firefox") {\n                if (+version >= 50) {\n                    $(".browserDetection .flex-item").css("background-color", "#ccffcc");\n                    message = YouSeemToBeUsing + "Firefox version " + version + "<br><br>-- ready for analysis";\n                } else {\n                    message = updateYourBrowser();\n                }\n            } else if (browser === "Chrome") {\n                if (+version >= 55) {\n                    $(".browserDetection .flex-item").css("background-color", "#ccffcc");\n                    message = YouSeemToBeUsing + "Chromium version " + version + "<br><br>-- ready for analysis";\n                } else {\n                    message = updateYourBrowser();\n                }\n            } else {\n                message = changeYourBrowser();\n            }\n        }\n\n        // #section1 > div.browserDetection.flex-container > div > h3\n        function goodToGo() {\n            $(".browserDetection .flex-item").css("background-color", "#ccffcc");\n            var messageReply = YouSeemToBeUsing + platform.name + " version " + version + "<br><br>" + readyForAnalysis;\n            return messageReply;\n        }\n\n        function updateYourBrowser() {\n            var messageReply = YouSeemToBeUsing + platform.name + " version " + version + "<br><br>" + YouShouldUpdate;\n            $(".browserDetection .flex-item").css("background-color", "yellow");\n            return messageReply;\n        }\n\n        function changeYourBrowser() {\n            var messageReply = YouSeemToBeUsing + platform.name + " version " + version + "<br><br>" + YouShouldSwitch;\n            $(".browserDetection .flex-item").css("background-color", "yellow");\n            return messageReply;\n        }\n        $("#browserMessage").html(message);\n    })();\n\n\n    // ************************************************************  view\n    // ******* SECTION 2 - persist radio button selections     **********\n    // ******************************************************************\n    // DATA SECTION\n\n    $(function () {\n        $(\'#section2 input[type=radio]\').each(function () {\n            var state = JSON.parse(localStorage.getItem(\'radio_\' + this.id));\n            if (state) {\n                this.checked = state.checked;\n                var radioValue = $("input[name=\'radio\']:checked").attr("id");\n                $("#" + radioValue).parent().addClass("selected");\n                inputTypeDisplay(radioValue);\n            }\n        });\n\n        $(window).bind(\'unload\', function () {\n            $(\'#section2 input[type=radio]\').each(function () {\n                localStorage.setItem(\n                    \'radio_\' + this.id, JSON.stringify({\n                        checked: this.checked\n                    })\n                );\n            });\n        });\n\n        $("#section2 input[type=\'radio\']").click(function () {\n            var radioValue = $("input[name=\'radio\']:checked").attr("id");\n            $("#existingDatabaseStatementList").empty();\n            $("#existingDatabaseRespondentList").empty();\n\n            // destroy datatable if present\n            if ($.fn.DataTable.isDataTable(\'#correlationTable2\')) {\n                $(\'#correlationTable2\').DataTable().destroy();\n                $(\'#correlationTable2\').html("");\n            }\n            $(\'#section2 .radioHighlight2\').removeClass("selected");\n            inputTypeDisplay(radioValue);\n        });\n    });\n\n    // **** SECTION 3 **** //\n    VIEW.destroyExtractionTables = function () {\n\n        var language = QAV.getState("language");\n        var centFacButText = resources[language].translation["Extract centroid factors"];\n        var PcaButText = resources[language].translation["Extract principal components"];\n\n        var table = $(\'#factorRotationTable1\').DataTable();\n        if (table) {\n            table.destroy();\n            $(\'#factorRotationTable1\').empty();\n            var footerTable = $(\'#factorRotationTable1Footer\').DataTable();\n            footerTable.destroy();\n            $(\'#factorRotationTable1Footer\').empty();\n            $("#rotationHistoryList").empty();\n\n            var factorExtractionButton = $("#factorExtractionButton");\n            if (factorExtractionButton.hasClass("buttonActionComplete")) {\n                factorExtractionButton.removeClass("buttonActionComplete");\n                factorExtractionButton.addClass("blackHover");\n            }\n            factorExtractionButton.prop(\'value\', centFacButText);\n            factorExtractionButton.prop(\'disabled\', false);\n\n            var PcaExtractionButton = $("#PcaExtractionButton");\n            if (PcaExtractionButton.hasClass("buttonActionComplete")) {\n                PcaExtractionButton.removeClass("buttonActionComplete");\n                PcaExtractionButton.addClass("blackHover");\n            }\n            PcaExtractionButton.prop(\'value\', PcaButText);\n            PcaExtractionButton.prop(\'disabled\', false);\n        }\n    };\n\n    // SECTION 4\n    VIEW.changePcaExtractionButtonDisplay = function () {\n        var language = QAV.getState("language");\n        var PcaButText = resources[language].translation["Principal components"];\n        var button = $("#PcaExtractionButton");\n        button.removeClass("blackHover");\n        button.addClass("buttonActionComplete");\n        button.prop(\'value\', PcaButText);\n        button.prop(\'disabled\', true);\n\n        button2 = $("#factorExtractionButton");\n        button2.prop(\'disabled\', true);\n\n        $("#resetAnalysisButton").prop(\'disabled\', false);\n    };\n\n\n    // ***********************************************************************  view\n    // ******* control D3 checkboxes       *****************************************\n    // *****************************************************************************\n\n    $(function () {\n        $("input[name=radioCheck]").change(function () {\n            var max = 2;\n            if ($("input[name=radioCheck]:checked").length == max) {\n                $("input[name=radioCheck]").attr(\'disabled\', \'disabled\');\n                $("input[name=radioCheck]:checked").removeAttr(\'disabled\');\n            } else {\n                $("input[name=radioCheck]").removeAttr(\'disabled\');\n            }\n\n            var tempArrayChartFactors = [];\n            $(\'input[name="radioCheck"]:checked\').each(function () {\n                var numberify = parseInt((this.value), 10);\n                tempArrayChartFactors.push(numberify);\n                localStorage.chartSelectedFactors = JSON.stringify(tempArrayChartFactors);\n            });\n        });\n    });\n\n    VIEW.clearSections_4_5_6 = function () {\n\n        $("#judgementalRotationContainer").hide();\n        $("#factorLoadingContainerDiv").hide();\n        $("#selectFactorsForOutputButton").hide();\n        $("#downloadCsvResultsButton").hide();\n        $("#displayQuickResultsButton").hide();\n        $("#factorVizOptionsDiv").hide();\n\n\n        var varimaxButton = $("#factorVarimaxButton");\n        if (varimaxButton.hasClass("buttonActionComplete")) {\n            varimaxButton.removeClass("buttonActionComplete");\n            varimaxButton.addClass("blackHover");\n            varimaxButton.prop(\'value\', \'apply varimax rotation\');\n            varimaxButton.prop(\'disabled\', false);\n        }\n        $("#factorVarimaxButton").hide();\n\n        var judgeButton = $("#factorJudgementRotButton");\n        if (judgeButton.hasClass("buttonActionComplete")) {\n            judgeButton.removeClass("buttonActionComplete");\n            judgeButton.addClass("blackHover");\n            judgeButton.prop(\'disabled\', false);\n        }\n        $("#factorJudgementRotButton").hide();\n\n        $("#chartAndTableDisplayContainer").hide();\n\n        // for some reason caching the selector causes error on analysis restart\n        if ($.fn.DataTable.isDataTable(\'#factorRotationTable2\')) {\n            $(\'#factorRotationTable2\').DataTable().destroy();\n            $(\'#factorRotationTable2\').html("");\n        }\n        var button = $("#sendToRotationButton");\n        if (button.hasClass("buttonActionComplete")) {\n            button.removeClass("buttonActionComplete");\n            button.addClass("blackHover");\n            button.prop(\'value\', "Submit");\n            button.prop(\'disabled\', false);\n        }\n\n        // destroy quick results tables if present\n        VIEW.clearPreviousTables();\n\n        // remove checkboxes\n        VIEW.removeOutputFactorCheckboxes();\n\n        $("#downloadResultsButton").hide();\n        $("#clearStorageButton").hide();\n    };\n\n\n\n    // ******* helper function to show / hide input methods   ************************\n\n    function inputTypeDisplay(inputType) {\n        //\n        $("label[for=\'" + inputType + "\']").addClass("selected");\n        switch (inputType) {\n            case "radio4":\n                $("#manualInputContainer").hide(300);\n                $("#databaseSelectDiv").hide(300);\n                $("#rawSorts").hide(300);\n                $(".firebaseDataInputDiv").hide(300);\n                $("#pasteExcelDataDiv").show(300);\n                $(".analysisDataDiv").show(300);\n                $(".pqmButton").hide();\n                break;\n\n            case "radio3": // pqmethod pasted data\n                $("#manualInputContainer").hide(300);\n                $("#databaseSelectDiv").hide(300);\n                $("#pasteExcelDataDiv").hide(300);\n                $(".firebaseDataInputDiv").hide(300);\n                $("#rawSorts").show(300);\n                $(".analysisDataDiv").show(300);\n                $(".pqmButton").hide();\n                break;\n\n            case "radio2":\n                $("#databaseSelectDiv").hide(300);\n                $("#rawSorts").hide(300);\n                $("#pasteExcelDataDiv").hide(300);\n                $(".firebaseDataInputDiv").hide(300);\n                $("#manualInputContainer").show(300);\n                $(".analysisDataDiv").show(300);\n                $(".pqmButton").hide();\n                break;\n\n            case "radio1": // radio5\n                $("#databaseSelectDiv").hide(300);\n                $("#rawSorts").hide(300);\n                $("#pasteExcelDataDiv").hide(300);\n                $("#manualInputContainer").hide(300);\n                $(".analysisDataDiv").show(300);\n                $(".firebaseDataInputDiv").show(300);\n                $(".pqmButton").hide();\n                break;\n\n            default:\n                $("#manualInputContainer").hide(300);\n                $("#rawSorts").hide(300);\n                $("#pasteExcelDataDiv").hide(300);\n                $(".firebaseDataInputDiv").hide(300);\n                $(".analysisDataDiv").show(300);\n                $("#databaseSelectDiv").show(300);\n                $(".pqmButton").hide();\n                $("#radio5").parent().addClass("selected");\n        }\n    }\n\n    // ************************************************************  view\n    // ******* SECTION 5 - factor loadings table  ***********************\n    // ******************************************************************\n    // #section2 > div.row > div:nth-child(5) > div > label\n\n    // ************************************************************  view\n    // ******* SECTION 6 - output tables  *******************************\n    // ******************************************************************\n\n    VIEW.removeOutputFactorCheckboxes = function () {\n        var temp = document.getElementById("selectFactorsForOutputDiv");\n        if (temp) {\n            while (temp.firstChild) {\n                temp.removeChild(temp.firstChild);\n            }\n        }\n    };\n\n    // ***********************************************************************  view\n    // ******  remove previous tables from the DOM  ********************************\n    // *****************************************************************************\n    // todo - dry and clean-up this block\n\n    VIEW.clearPreviousTables = function () {\n\n        var temp99 = $(\'#synSortSvgNo1\');\n        if (temp99) {\n            d3.selectAll("#synFactorVizDiv svg").remove();\n        }\n\n        $(".vizTitles").remove();\n        $(".svgDownloadButton").remove();\n        $(".pngDownloadButton").remove();\n\n        var $temp = $("#factorCorrelationTableTitle");\n        var $temp3 = $("#factorCorrelationTableDiv");\n        if ($temp) {\n            $temp.empty();\n            $temp3.empty();\n        }\n        var $temp2 = $("#factorTables");\n        if ($temp2) {\n            $temp2.empty();\n        }\n    };\n\n\n\n\n    // ***********************************************************************  view\n    // ******* control iziModal Displays      *****************************************\n    // *****************************************************************************\n\n\n    // ***********************************************************************  view\n    // ******* old modal box controllers  ******************************************\n    // *****************************************************************************\n\n    // SUBMIT BUTTON event listeners\n    $(function () {\n        $(\'#invertModal\').on(\'click\', \'.button-submit\', function (e) {\n            // e.preventDefault();\n            e.stopPropagation();\n            var inputValue = $("#invertModal input").val();\n            if (inputValue === false || inputValue === "") {\n                return false;\n            }\n            // todo - change to list of available factors and remove max and min from index.html\n            if (inputValue > 8 || inputValue < 1) {\n                return false;\n            } else {\n                var currentRotationTable = QAV.getState("rotFacStateArray");\n                LOAD.factorInvertFunction(inputValue, currentRotationTable);\n                $(\'#invertModal\').iziModal(\'close\');\n            }\n        });\n    });\n\n    // SUBMIT BUTTON event listeners\n    $(function () {\n        $(\'#splitModal\').on(\'click\', \'.button-submit\', function (e) {\n            // e.preventDefault();\n            var inputValue = $("#splitModal input").val();\n            if (inputValue === false || inputValue === "") {\n                return false;\n            }\n            // todo - change to list of available factors and remove max and min from index.html\n            if (inputValue > 8 || inputValue < 1) {\n                return false;\n            } else {\n                LOAD.factorSplitFunction(inputValue);\n                $(\'#splitModal\').iziModal(\'close\');\n            }\n        });\n    });\n\n    // cancel and close button across all modal windows\n    $(function () {\n        $(\'.button-cancel\').on(\'click\', function (e) {\n            // e.preventDefault();\n            $(this).closest("div.modal").toggleClass(\'active\');\n        });\n    });\n\n\n    VIEW.showDisabledFunctionsAfterSplitModal = function () {\n        var language = QAV.getState("language");\n        var title = resources[language].translation.Warning;\n\n        $(\'#functionDisabledModal\').iziModal({\n            title: title,\n            subtitle: \'\',\n            headerColor: \'#ffff00\', // \'#88A0B9\',\n            theme: \'light\', // light\n            attached: \'\', // bottom, top\n            width: \'80%\',\n            padding: 20,\n            radius: 3,\n        });\n        $("#functionDisabledModal").iziModal(\'open\');\n    };\n\n    VIEW.showNoSortsFlaggedOnFactorModal = function () {\n        var language = QAV.getState("language");\n        var title = resources[language].translation.Error;\n        $(\'#noFactorLoadingModal\').iziModal({\n            title: title,\n            headerColor: \'#e50000\', // \'#88A0B9\',\n            width: \'80%\',\n            padding: 20,\n            radius: 3,\n        });\n        $("#noFactorLoadingModal").iziModal(\'open\');\n    };\n\n    VIEW.showSortFlaggedOnMultipleFactorsModal = function () {\n        var language = QAV.getState("language");\n        var title = resources[language].translation.Error;\n        $(\'#sortLoadingMultipleFactorsModal\').iziModal({\n            title: title,\n            subtitle: \'\',\n            headerColor: \'#e50000\', // \'#88A0B9\',\n            theme: \'\', // light\n            attached: \'\', // bottom, top\n            width: \'80%\',\n            padding: 20,\n            radius: 3,\n        });\n        $("#sortLoadingMultipleFactorsModal").iziModal(\'open\');\n    };\n\n    VIEW.showInvertModal = function () {\n        var language = QAV.getState("language");\n        var title = resources[language].translation["Select Factor to Invert"];\n\n        $(\'#invertModal\').iziModal({\n            title: title,\n            subtitle: \'\',\n            headerColor: \'#6d7d8d\', // \'#88A0B9\',\n            width: \'80%\',\n            bodyOverflow: true,\n            closeOnEscape: true,\n            overlay: true,\n            timeout: false, // or false\n            timeoutProgressbar: false,\n            pauseOnHover: false,\n            timeoutProgressbarColor: \'rgba(255,255,255,0.5)\',\n        });\n        $(\'#invertModal\').iziModal(\'open\');\n    };\n\n    VIEW.showlocalDataDeleteSuccessModal = function () {\n        var language = QAV.getState("language");\n        var title = resources[language].translation["Permanently delete all locally-stored data"];\n        $(\'#localDataDeleteSuccessfulModal\').iziModal({\n            title: title,\n            subtitle: \'\',\n            headerColor: \'#4CBB17\', // \'#88A0B9\',\n            width: \'80%\',\n            padding: 20,\n            overlay: true,\n            timeout: 1500, // or false\n            timeoutProgressbar: true,\n            pauseOnHover: true,\n            timeoutProgressbarColor: \'rgba(255,255,255,0.5)\',\n        });\n        $(\'#localDataDeleteSuccessfulModal\').iziModal(\'open\');\n    };\n\n\n    VIEW.showDeleteKenqData = function () {\n        var language = QAV.getState("language");\n        var title = resources[language].translation["Delete local data"];\n        $(\'#deleteLocalDataModal\').iziModal({\n            title: title,\n            subtitle: \'\',\n            padding: 20,\n            headerColor: \'#e50000\', // \'#88A0B9\',\n            width: \'80%\',\n        });\n        $(\'#deleteLocalDataModal\').iziModal(\'open\');\n    };\n\n    VIEW.showSplitBipolarFactorModal = function () {\n        var language = QAV.getState("language");\n        var title = resources[language].translation["Split Bipolar Factor"];\n        $(\'#splitModal\').iziModal({\n            title: title,\n            subtitle: \'\',\n            headerColor: \'#6d7d8d\', // \'#88A0B9\',\n            width: \'80%\',\n            padding: 20,\n        });\n        $(\'#splitModal\').iziModal(\'open\');\n    };\n\n    VIEW.showRotationChartOptionsModal = function () {\n        var language = QAV.getState("language");\n        var title = resources[language].translation["Rotation Chart Options"];\n        $(\'#rotationChartOptionsModal\').iziModal({\n            title: title,\n            headerColor: \'#6d7d8d\', // \'#88A0B9\',\n            width: \'80%\',\n            padding: 20,\n            radius: 3,\n        });\n        $("#rotationChartOptionsModal").iziModal(\'open\');\n    };\n\n    VIEW.showGenericErrorModal = function () {\n        var language = QAV.getState("language");\n        var title = resources[language].translation.Error;\n        $(\'#genericErrorModal\').iziModal({\n            title: title,\n            subtitle: \'\',\n            padding: 20,\n            headerColor: \'#e50000\', // \'#88A0B9\',\n            width: \'80%\',\n        });\n        $(\'#genericErrorModal\').iziModal(\'open\');\n\n    };\n\n}(window.VIEW = window.VIEW || {}, QAV));//# sourceMappingURL=data:application/json;charset=utf-8;base64,')}});